name: CI Pipeline

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  gitleaks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run Gitleaks scan
        run: |
          docker run --rm \
            -v $(pwd):/repo \
            --workdir /repo \
            --entrypoint gitleaks \
            zricethezav/gitleaks:latest detect . -v --redact --report-format json --report-path /repo/gitleaks-report.json

      - name: Fail if secrets detected
        run: |
          if grep -q "Secret detected" gitleaks-report.json; then
            echo "Secrets detected!"
            exit 1
          fi

  linters:
    runs-on: ubuntu-latest
    needs: gitleaks  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          npm install

      - name: Run linters
        run: npm run lint -- --fix

  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }} 
      
      - name: Run Snyk Test
        run: npm run snyk test

      - name: Snyk Monitor
        run: npm run snyk monitor